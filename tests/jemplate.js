/* 
   This Javascript code was generated by Jemplate, the Javascript
   Template Toolkit. Any changes made to this file will be lost the next
   time the templates are compiled.

   Copyright 2006 - Ingy d√∂t Net - All rights reserved.
*/

if (typeof(Jemplate) == 'undefined')
    throw('Jemplate.js must be loaded before any Jemplate template files');

Jemplate.templateMap['hello.html'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += 'Hello, ';
//line 1 "hello.html"
output += stash.get('name');
output += '\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['join.html'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
//line 1 "join.html"
stash.set('a', [ 'foo', 'bar', 'baz' ]);
//line 1 "join.html"
output += stash.get(['a', 0, 'join', [ '::' ]]);
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['list.html'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
//line 1 "list.html"
stash.set('a1', [ 'one', 'two', 'three' ]);
//line 2 "list.html"
stash.get(['a1', 0, 'push', [ 'four' ]]);
//line 3 "list.html"
output += stash.get(['a1', 0, 'first', 0]);
output += ' - ';
//line 3 "list.html"
output += stash.get(['a1', 0, 'last', 0]);
output += '\n';
//line 4 "list.html"
output += stash.get(['a1', 0, 'grep', [ 'o' ], 'join', [ '/' ]]);
output += '\n';
//line 5 "list.html"
output += stash.get(['a1', 0, 'max', 0]);
output += '+';
//line 5 "list.html"
output += stash.get(['a1', 0, 'size', 0]);
output += '\n';
//line 6 "list.html"
stash.set('a2', stash.get(['a1', 0, 'reverse', 0]));
//line 7 "list.html"
output += stash.get(['a2', 0, 'join', [ '^' ]]);
output += '\n';
//line 8 "list.html"
output += stash.get(['a2', 0, 'slice', [ 1, 3 ], 'join', [ '*' ]]);
output += '\n';
//line 9 "list.html"
stash.set('a3', [ 5, 9, 'x', 17, 9, 33, 12, 'x', 5 ]);
//line 10 "list.html"
output += stash.get(['a3', 0, 'unique', 0, 'join', [ ',' ]]);
output += '\n';
//line 11 "list.html"
output += stash.get(['a1', 0, 'unshift', [ 'zero' ], 'sort', 0, 'join', [ '!' ]]);
output += '\n';
//line 12 "list.html"
stash.get(['a1', 0, 'shift', 0]);
//line 12 "list.html"
stash.get(['a1', 0, 'pop', 0]);
//line 12 "list.html"
output += stash.get(['a1', 0, 'join', [ '_' ]]);
output += '\n';
//line 13 "list.html"
stash.get(['a3', 0, 'splice', [ 2, 1 ]]);
//line 13 "list.html"
stash.get(['a3', 0, 'splice', [ -2, 1 ]]);
//line 13 "list.html"
output += stash.get(['a3', 0, 'nsort', 0, 'join', [ '~' ]]);
output += '\n';
//line 14 "list.html"
stash.set('a4', [ 11, 22, 33 ]);
//line 15 "list.html"
stash.set('a5', [ 44, 55, 66 ]);
//line 16 "list.html"
stash.set('a6', [ 77, 88, 99 ]);
//line 17 "list.html"
stash.set('a7', stash.get(['a4', 0, 'merge', [ stash.get('a5'), 'foo', stash.get('a6') ]]));
//line 18 "list.html"
output += stash.get(['a7', 0, 'join', [ '\'' ]]);
output += '\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

